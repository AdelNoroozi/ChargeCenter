# Generated by Django 4.0.7 on 2024-07-10 17:25

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='BaseUser',
            fields=[
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('is_active', models.BooleanField(default=True, verbose_name='is active')),
                ('position', models.PositiveIntegerField(default=0, editable=False, verbose_name='position')),
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True, verbose_name='created at')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='updated at')),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('email', models.EmailField(max_length=254, unique=True, verbose_name='email')),
                ('is_admin', models.BooleanField(default=False, verbose_name='is_admin')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'User',
                'verbose_name_plural': 'Users',
            },
        ),
        migrations.CreateModel(
            name='SalesPerson',
            fields=[
                ('is_active', models.BooleanField(default=True, verbose_name='is active')),
                ('position', models.PositiveIntegerField(default=0, editable=False, verbose_name='position')),
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True, verbose_name='created at')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='updated at')),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('first_name', models.CharField(max_length=256, verbose_name='first name')),
                ('last_name', models.CharField(max_length=256, verbose_name='last name')),
                ('balance', models.PositiveBigIntegerField(default=0, verbose_name='balance')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.RESTRICT, to=settings.AUTH_USER_MODEL, verbose_name='user')),
            ],
            options={
                'verbose_name': 'Sales Person',
                'verbose_name_plural': 'Sales People',
            },
        ),
        migrations.AddIndex(
            model_name='salesperson',
            index=models.Index(fields=['balance'], name='users_sales_balance_3eae44_idx'),
        ),
        migrations.AddIndex(
            model_name='salesperson',
            index=models.Index(fields=['created_at'], name='users_sales_created_593db7_idx'),
        ),
        migrations.AddIndex(
            model_name='baseuser',
            index=models.Index(fields=['email'], name='users_baseu_email_97cf3e_idx'),
        ),
    ]
